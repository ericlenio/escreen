# vim:filetype=sh
function ssh() {
  if [ -t 1 ]; then
    local cp_prefix=$HOME/.ssh/expect-ssh:$$:
    local cp_mask=$cp_prefix%r:%h:%n:%p
    rm -f $cp_prefix*
    local last_arg=${@:$#}
    [ -z "$last_arg" ] && { echo "no arguments to ssh?"; return; }
    /usr/bin/ssh -R0:localhost:$ESH_PORT -oControlMaster=yes -S $cp_mask -n -N "$@" 2>&1 | {
      # wait for ControlPath file to exist
      while [ -z "$(ls $cp_prefix* 2>/dev/null)" ]; do
        sleep 1
      done
      # find ssh host from ControlPath file that just was created
      local ssh_host=$(ls $cp_prefix* | cut -d: -f 4)
      # find ssh host, as specified on command line, from ControlPath file that just was created
      local cmdline_ssh_host=$(ls $cp_prefix* | cut -d: -f 5)
      # test if bash exists
      local has_bash=$(/usr/bin/ssh -S $cp_mask $cmdline_ssh_host 'sh -c "[ -f /bin/bash ] && echo 1"')
      # now do actual ssh session
      if [ "$has_bash" = 1 ]; then
        if [ "$last_arg" = "$cmdline_ssh_host" ]; then
          # set up channel to Command_Server
          local rem_port=$(/usr/bin/ssh -S $cp_mask -O forward -R0:localhost:$ESH_PORT $cmdline_ssh_host)
          #/usr/bin/ssh -t -S $cp_mask "$@" "ESH_PORT=$rem_port;$(declare -f _esh_b);eval \"\$(_esh_b zI)\"; /bin/bash --norc --noprofile" </dev/tty
          local otat=$(_esh_b otat </dev/null)
#exec 3<>/dev/tcp/localhost/$ESH_PORT;echo $otat zI >&3;echo bef:;gzip -d -c <&3; exec 3>&-;echo after
          /usr/bin/ssh -t -S $cp_mask "$@" 'exec 3<>/dev/tcp/localhost/'"$rem_port;echo $otat zB $rem_port >&3;"'c="$(gzip -d -c <&3)"; exec 3>&-; eval "$c"' </dev/tty
        else
          /usr/bin/ssh -S $cp_mask "$@"
        fi
      else
        /usr/bin/ssh -S $cp_mask "$@" </dev/tty
      fi
      # tear down the ControlMaster
      /usr/bin/ssh -S $cp_mask -O exit $cmdline_ssh_host
      [ "$EXPECTSSH_IN_SCREEN" = 1 -o -n "$STY" ] && printf "\033k${HOSTNAME}\033\134"
    }
    rm -f $cp_prefix*
  else
    # we are in a pipeline
    /usr/bin/ssh "$@"
  fi
}
export -f ssh
