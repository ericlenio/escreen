let f=$ESH_HOME."/core/gpg.vimrc"
" note: @% is the current file
if filereadable(f) && @% != ""
  exe 'source '.f
  " vim 7.x seems to require re-loading the buffer, thus edit command here
  edit
endif
map <c-v> :let @"=system("_esh_b zGetCb")<cr>:if col("$")-col(".")==1<bar>call feedkeys("p")<bar>else<bar>call feedkeys("P")<bar>endif<bar>redraw<bar>echon "Pasted " len(@") " characters"<cr>
function Cp2cb()
  " copies the contents of the unnamed register to OS clipboard;
  " NOTE: the system command will write out to a temp file
  " which is vim's tempname() function - a long running vim session
  " may delete the directory that tempname() places files
  try
    call system("cp2cb",@")
    echon "Copied " len(@") " characters"
  catch /.*/
    echo v:exception
  endtry
endfunction
" vnoremap: "v" visual mode, "nore" no recurse, "map" map
" here we remap control-c to copy the current visual selection to the OS clipboard
vnoremap <c-c> y:call Cp2cb()<cr>
if @% =~ "passwords.gpg$"
  " when editing the passwords file, remap * to copy the current word to OS clipboard
  " use the expand() function to highlight the current word (cword)
  " nmap: "n" means we are mapping a key in vim's normal mode
  nmap <buffer> * :let @/=expand("<cword>")<cr>:let @"=@/<cr>:call Cp2cb()<cr>
endif
colorscheme elflord
syntax enable
set cursorline noswapfile number hlsearch incsearch sw=2 ignorecase wrap nocompatible 
set ruler ai nocindent indentexpr= showmatch modeline modelines=5 nobackup nowritebackup textwidth=0
set expandtab formatoptions=croql nojoinspaces scrolloff=0
set wildmenu wildignore=*.o,*.class,*.jar,*.png,*.pdf,**node_modules/**,build/**,.git/**,.svn/**,dist/**,tmp/** path=.,,**
filetype indent off
"nnoremap K :execute " grep -srnw --binary-files=without-match --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=.svn . -e " . expand("<cword>") . " " <bar> cwindow<CR>
" note: vimgrep respects wildignore
nnoremap K :let @/=expand("<cword>")<bar>exe "vimgrep /" . @/ . "/g **" <bar> cwindow<CR>
if exists("my_find")
  call feedkeys(":find ".my_find."\<tab>","t")
endif
