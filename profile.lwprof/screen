# vim:filetype=sh
screen() {
  # see if -r or -R was passed, if so just invoke screen with the current arg list "as is"
  local origArgs=("$@")
  # NOTE: cannot set OPTS in 1 line, it strips the return value from the subshell
  local OPTS
  # Note: escreen sends "--", that is why we skip it here
  if [ "$1" != -- ]; then
    for opt in "$@"; do
      case $opt in
        -d|-D|-r|-R|-RR|-ls|-list|-Q|-v|-x|-X)
          env screen "$@"
          return $?
          ;;
      esac
    done
  fi
  local shell=$ESH_TMP/$USER.screen.shell
  touch $shell
  chmod 700 $shell
  # Create custom shell based on sh: call sh first so that original PS1 is
  # maintained. Update: on OSX, sh is just a thin wrapper to bash, and it
  # resets PS1. So, use perl instead.
  echo -n '#!/usr/bin/perl
($ENV{ESH_STY})=$ENV{STY}=~m{^(\d+)}g;
exec (qw(bash --norc --noprofile),@ARGV);
' > $shell
  local SCREENRC=$ESH_TMP/$USER.screenrc
  # Set up a little macro so that ^a% will dump the current screen to a file,
  # then edit it in vim.
  local printscreen_macro=$ESH_TMP/$USER.screenrc.printscreen
  local hardcopy_file=$ESH_TMP/$USER.screenrc.hardcopy
  touch $SCREENRC $printscreen_macro $hardcopy_file
  chmod 600 $SCREENRC $printscreen_macro $hardcopy_file
  export SCREENRC
  cat > $SCREENRC << 'EOF'
startup_message off
bind " " windowlist -b
vbell on
vbell_msg DING
#shelltitle "$ |bash:"
bindkey "\032" stuff "\032"
caption always "%{= kw}%-w%{= BW}%n%t%{-}%+w %-= @%H %m/%d %c"
shelltitle "$ |:"
defmonitor on
msgwait 1
#setenv PROMPT_COMMAND 'screen_prompt'
#shell $shell
#screen rm $SCREENRC

# allow special screen user ":window:" to send keystrokes: used in ssh;
# man screen for some other details (used in combination with screen
# escape "ESC ] 83 ; cmd ^G")
#addacl :window: -rwx #?
#aclchg :window: +w+x stuff,sleep
EOF
  cat >> $SCREENRC << EOF
bind % source $printscreen_macro
EOF
  cat > $printscreen_macro << EOF
hardcopy_append off
hardcopy $hardcopy_file
screen bash -c "vim $hardcopy_file"
EOF

  local esc='^Ee'
  if [ -z "$ESH_STY" ]; then
    esc='^Aa'
  fi
  local exec
  [ "$ESH_SCREEN_EXEC" = 1 ] && exec=exec
  $exec env screen -e$esc -s $shell "${origArgs[@]}"
}
