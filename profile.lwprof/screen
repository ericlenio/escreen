# vim:filetype=sh
screen() {
  # make copy of original function args
  local args=("$@") opt rcfile
  # Note: escreen sends "--", that is why we skip it here
  if [ "$1" != -- ]; then
    for opt in "$@"; do
      case $opt in
        -r)
          local curr_sty=${STY:-some_value} pick_sty
          local stys=$(env screen -ls | grep -v $curr_sty | grep -vi attached | while read l; do
            if [[ "$l" =~ ^[[:blank:]]*([0-9]+\.[[:print:]]+) ]]; then
              echo ${BASH_REMATCH[1]}
            fi
          done)
          if [ -z "$stys" ]; then
            echo "No screen sessions detected."
            return 1
          fi
          if [ $(echo "$stys" | wc -l) = 1 ]; then
            pick_sty="$stys"
          elif ! pick_sty=$(-pick-something "Resume which session?" "$stys"); then
            return $?
          fi
          if [[ $pick_sty =~ ^[0-9]+\.(.+) ]]; then
            eval "$(_esh_e)"
            _esh_e ${BASH_REMATCH[1]} ESH_PORT SSH_AUTH_SOCK ESH_AT ESH_TERM_PID
            # strip off "screen." prefix from $TERM to avoid "$TERM too long" issue
            env TERM=${TERM#screen.} screen -d -r $pick_sty
            return $?
          else
            echo "failed to acquire ESH_STY value" >&2
            return 1
          fi
          ;;
        -d|-D|-R|-RR|-ls|-list|-Q|-v|-x|-X)
          env screen "$@"
          return $?
          ;;
      esac
    done
  fi
  # anticipitory optimization: pre-load vim, so it does not need to be loaded
  # in every screen window
  v --version >/dev/null
  local esc=^Aa

  if [ "$SSH_TTY" ]; then
    # assume nested gnu screen, so use alternate escape sequence
    esc=^Ee
  else
    # not nested, register $ESH_STY
    _esh_b registerSty $ESH_TERM_PID $ESH_STY
  fi

  rcfile=$(mktemp)
  cat << EOF >$rcfile
bind / screen $ESH_EDITOR $ESH_PW_FILE
# bind "%" to take a screenshot, and open a new window to edit it
bind % exec bash -c 'f=\$(mktemp) t=\$RANDOM; env screen -X hardcopy \$f; env screen -t \$t sh -c "$ESH_EDITOR \$f; rm \$f"; env screen -X select \$t'
bind \040 windowlist -b
vbell on
vbell_msg DING
defmonitor on
msgwait 1
hardstatus ignore
shelltitle "$ |:"
caption always "%{= kw}%-w%{= BW}%n%t%{-}%+w %-= @%H %{= Y}%l%{-} %m/%d %c"
EOF
  # strip off "screen." prefix from $TERM to avoid "$TERM too long" issue
  env SCREENRC=$rcfile DROP_SCREENRC=1 TERM=${TERM#screen.} screen -S $ESH_STY -e$esc "${args[@]}"
}
