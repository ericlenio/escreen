# vim:filetype=sh
# Reset a user's password. Usage:
# ld_reset_password [dbname:]auth_prov/username
ld_reset_password() { 
  local ctx_prov_auth=$1
  local default_ctx=lincdoc
  if [ "${ctx_prov_auth}" = "${ctx_prov_auth%%:*}" ]; then
    ctx_prov_auth=$default_ctx:$ctx_prov_auth
  fi
  local ctx=${ctx_prov_auth%%:*}
  local auth_prov=${ctx_prov_auth##*:}
  auth_prov=${auth_prov%%/*}
  local user=${ctx_prov_auth##*/}
  if [ -z "$ctx" -o -z "$user" -o -z "$auth_prov" ]; then
    echo "Usage: ld_reset_password [context:]auth_prov/username" >/dev/tty
    echo "There are 2 modes of operation:" >/dev/tty
    echo "1. pipe this command to a suitable psql command to perform the password reset in that connection" >/dev/tty
    echo "2. else lwsa is used to dereference the app context and connect to postgres using the connection string detected from that context" >/dev/tty
    return
  fi

  eval $(_esh_b getLdPasswordResetParams)
  if [ -z "$LD_PW_INIT_SALT" -o "$LD_PW_INIT_SALT" = undefined ]; then
    echo "Missing LD_PW_INIT_SALT, you may need to create LD_PW_INIT_SALT, LD_PW_SALT_SIZE, LD_PW_HASH_ALG, and LD_PW_DGST_ITERATIONS in .escreenrc" >/dev/tty
    return
  fi

  local newpw newpw2
  read -s -p "New password: " newpw
  echo >/dev/tty
  [ -z "$newpw" ] && return
  read -s -p "Same password again: " newpw2
  echo >/dev/tty
  if [ "$newpw" != "$newpw2" ]; then
    echo "Passwords do not match." >/dev/tty
    return
  fi

  echo "Generating password digest ..." >/dev/tty
  local salt=$(openssl rand -base64 $LD_PW_SALT_SIZE)
  local digest=$( ( echo $salt | openssl enc -d -base64; echo -n "$LD_PW_INIT_SALT$newpw" ) | openssl enc -base64 -A)
  for ((i=1; i<=$LD_PW_DGST_ITERATIONS; i++)); do
    digest=$(echo $digest | openssl enc -A -d -base64 | openssl dgst -$LD_PW_HASH_ALG -binary | openssl enc -base64 -A)
  done
  digest=$( ( echo $salt | openssl enc -A -d -base64; echo $digest | openssl enc -A -d -base64 ) | openssl enc -base64 -A)

  if [ ${#digest} = 0 ]; then
    echo "Oops: digest is 0 bytes, aborting." >/dev/tty
    return
  fi

  local yesno
  echo "App context: $ctx" >/dev/tty
  echo "Auth provider: $auth_prov" >/dev/tty
  echo "Username: $user" >/dev/tty
  read -p "Confirm: proceed to reset the password (y/n, default=n)? " yesno
  [ "$yesno" != y ] && return
  echo "If you see UPDATE 1, the password reset was successful." >/dev/tty
  local sql="update ld_admin.ld_dbp_user set cryptpw='$digest' where provider_id='$auth_prov' and username='$user'"
  echo "$sql" >/dev/tty
  if [ -t 1 ]; then
    local psql="$(lwsa --get_psql_connect $ctx --silent)"
    echo $sql | eval "$psql"
  else
    echo $sql
  fi
}
