#! /usr/bin/env bash
ESH_HOME=$(node -r fs -e "console.log(fs.realpathSync(fs.realpathSync('$0')+'/..'))")
escreen_branch=$(cd $ESH_HOME && git rev-parse --abbrev-ref HEAD)
suffix=-$escreen_branch
[ $escreen_branch = master ] && suffix=""
ESH_TMP=/tmp/esh$suffix
[ ! -d $ESH_TMP ] && mkdir $ESH_TMP && chmod 1777 $ESH_TMP
ESH_USER=$USER
ESH_AT=xxxxx1
ESH_PORT=2021

opts="p:"
while getopts $opts opt; do
  case $opt in
    p) ESH_PORT=$OPTARG
      echo "NOTE: using port: $ESH_PORT"
      ;;
  esac
done

ESH_PROFILE_DIR=${!OPTIND:-$ESH_HOME/profile.lwprof}

# test that gpg-agent is up and running, if not this should get it going; note:
# gpg pinentry/askpass may depend on TERM and/or DISPLAY
if [ -t 0 ]; then
  echo "hello world" | gpg --default-recipient-self -ae | gpg -d >/dev/null
else
  echo "WARNING: gpg decryption may not work" >&2
fi

# only allow these environment variables to pass to the server process
pass_vars=(HOME PATH SSH_AUTH_SOCK ESH_HOME ESH_TMP ESH_USER ESH_AT ESH_PORT ESH_PROFILE_DIR LANG)
# OpenBSD (and possibly Linux) depend on $DISPLAY for clipboard logic, so pass
# it too if it is set
[ "$DISPLAY" ] && pass_vars+=(DISPLAY)

exec=(env -i)
for var in ${pass_vars[@]}; do
  exec+=($var="${!var}")
done
exec+=($(which node) $ESH_HOME/server.js)

exec "${exec[@]}"
